"""
Django settings for mirigata project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import re

from django.core.exceptions import ImproperlyConfigured


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


def get_database_host():
    docker_host = os.getenv('DOCKER_HOST', None)
    if docker_host:
        # docker_host is something like tcp://192.168.99.100:2376
        # so, let's extract the IP address
        match = re.match('^tcp://(.*):\d+$', docker_host)
        if not match:
            raise ImproperlyConfigured("Weird value for DOCKER_HOST, expected something like tcp://IP:PORT")

        return match.group(1)

    linked_container = os.getenv('MIRIGATA_DB_PORT_3306_TCP_ADDR', None)
    if linked_container:
        return linked_container

    raise ImproperlyConfigured("Could not find DOCKER_HOST or MIRIGATA_DB_PORT_3306_TCP_ADDR environment variable")


def get_database_port():
    docker_host = os.getenv('DOCKER_HOST', None)
    if docker_host:
        return 13306

    linked_container = os.getenv('MIRIGATA_DB_PORT_3306_TCP_PORT', None)
    if linked_container:
        return int(linked_container)

    raise ImproperlyConfigured("Could not find DOCKER_HOST or MIRIGATA_DB_PORT_3306_TCP_PORT environment variable")


def get_value_from_passwords(key):
    with open(os.path.join(BASE_DIR, '..', 'passwords.env')) as passwords:
        lines = passwords.readlines()
        for line in lines:
            k, value = line.strip().split('=', 1)
            if k == key:
                return value

    raise ImproperlyConfigured("Could not find {} in passwords.env".format(key))


def get_database_password():
    password = os.getenv('MYSQL_PASSWORD', None)
    if password:
        return password

    return get_value_from_passwords('MYSQL_PASSWORD')


def get_secret():
    secret = os.getenv('SECRET_KEY', None)
    if secret:
        return secret

    return get_value_from_passwords('SECRET_KEY')


def get_debug():
    return os.getenv("DOCKER_HOST", None) is not None

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = get_debug()

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '192.168.99.100', '.mirigata.com']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'crispy_forms',

    'website',
    'surprise',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'mirigata.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mirigata.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mirigata_db',
        'USER': 'mirigata',
        'PASSWORD': get_database_password(),
        'HOST': get_database_host(),
        'PORT': get_database_port(),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

CRISPY_TEMPLATE_PACK = "bootstrap3"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}
